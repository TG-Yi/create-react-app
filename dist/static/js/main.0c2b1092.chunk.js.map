{"version":3,"sources":["projects/filmApp/components/header.js","projects/filmApp/components/footer.js","projects/filmApp/index.js","serviceWorker.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this$props","leftColor","rightColor","leftSize","rightSize","titleText","titleColor","titleSize","headerBGC","react_default","a","createElement","className","concat","style","backgroundColor","borderBottom","color","fontSize","Component","defaultProps","refData","Footer","onMouseUp","item","index","activeStyle","assign","onRemoveStyle","console","log","data","boxShadow","onRef","ref","_this2","titleArray","map","key","onClick","title","Index","arr","i","push","components_header","width","components_footer","Boolean","window","location","hostname","match","ReactDOM","render","projects_filmApp","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c2b1092.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport propTypes from 'prop-types';\r\n\r\nimport \"./header.less\"\r\n\r\nconst styleClass = \"header-style\"\r\n\r\n\r\nclass Header extends Component {\r\n    static propTypes = {\r\n        leftColor: propTypes.string,\r\n        rightColor: propTypes.string,\r\n        leftSize: propTypes.string,\r\n        rightSize: propTypes.string,\r\n        titleText: propTypes.string,\r\n        titleSize: propTypes.string,\r\n        titleColor: propTypes.string,\r\n        headerBGC: propTypes.string,\r\n    }\r\n\r\n    static defaultProps = {\r\n        leftColor: \"#ffffff\",\r\n        rightColor: \"#ffffff\",\r\n        leftSize: \"14px\",\r\n        rightSize: \"14px\",\r\n        titleText: \"顶部标题描述\",\r\n        titleSize: \"14px\",\r\n        titleColor: \"#ffffff\",\r\n        headerBGC: \"#000000\",\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        // 监听路径变化\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { leftColor, rightColor, leftSize, rightSize, titleText, titleColor, titleSize, headerBGC } = this.props\r\n        return (\r\n            <div className={styleClass}>\r\n                <div className={`${styleClass}-head`} style={{ backgroundColor: headerBGC, borderBottom: \"1px solid #000000\" }}>\r\n                    <div className={`${styleClass}-head-left`}>\r\n                        <text style={{ color: leftColor, fontSize: leftSize }}>&lt;</text>\r\n                    </div>\r\n                    <text style={{ fontSize: titleSize, color: titleColor }}>{titleText}</text>\r\n                    <div className={`${styleClass}-head-right`}>\r\n                        <text style={{ color: rightColor, fontSize: rightSize }}>完成</text>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","import React, { Component } from \"react\"\r\nimport propTypes from 'prop-types';\r\n\r\nimport \"./footer.less\"\r\n\r\nconst styleClass = \"footer-style\"\r\nlet refData = {}\r\nclass Footer extends Component {\r\n    static propTypes = {\r\n        titleArray: propTypes.array,\r\n        activeStyle: propTypes.object,\r\n    }\r\n\r\n    static defaultProps = {\r\n        // 底部菜单集合：title：描述内容；onClick：点击事件；activeStyle：菜单选中后的样式；样式属性可以自定义添加到集合里面，需要按照在react中写行内样式格式即可\r\n        titleArray: [\r\n            { title: \"标题1\", onClick: (item) => console.log(item), color: \"#9f9f9f\", fontSize: \"12px\", backgroundColor: \"yellow\", activeStyle: { color: \"#fff\", backgroundColor: \"red\", boxShadow: \"rgb(220, 223, 227) 0px 0px 15px inset\" } },\r\n            { title: \"标题2\", onClick: (item) => console.log(item), color: \"#9f9f9f\", fontSize: \"12px\", backgroundColor: \"yellow\", activeStyle: { color: \"#fff\", backgroundColor: \"red\", boxShadow: \"rgb(220, 223, 227) 0px 0px 15px inset\" } },\r\n            { title: \"标题3\", onClick: (item) => console.log(item), color: \"#9f9f9f\", fontSize: \"12px\", backgroundColor: \"yellow\" },\r\n            { title: \"标题4\", onClick: (item) => console.log(item), color: \"#9f9f9f\", fontSize: \"12px\", backgroundColor: \"yellow\" },\r\n            { title: \"标题5\", onClick: (item) => console.log(item), color: \"#9f9f9f\", fontSize: \"12px\", backgroundColor: \"yellow\" }\r\n        ],\r\n        // 全局下的选中样式\r\n        activeStyle: { color: \"#fff\", backgroundColor: \"blue\", boxShadow: \"rgb(220, 223, 227) 0px 0px 15px inset\" }\r\n    }\r\n\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        console.log(this.index)\r\n    }\r\n\r\n    // 选中后改变样式\r\n    onMouseUp = (item, index) => {\r\n        if (item.activeStyle) {\r\n            Object.assign(refData[index].style, item.activeStyle)\r\n            this.onRemoveStyle(item, index)\r\n            console.log(index)\r\n        } else if (this.props.activeStyle) {\r\n            Object.assign(refData[index].style, this.props.activeStyle)\r\n            this.onRemoveStyle(item, index)\r\n        }\r\n    }\r\n\r\n    // 清除选中样式\r\n    onRemoveStyle = ( item, index ) => {\r\n        for (var data in refData) {\r\n            if (data != index) {\r\n                console.log(refData[data].style)\r\n                Object.assign(refData[data].style, { color: item.color && item.color, backgroundColor: item.backgroundColor && item.backgroundColor, fontSize: item.fontSize && item.fontSize, boxShadow: item.boxShadow && item.boxShadow })\r\n            }\r\n        }\r\n    }\r\n\r\n    onRef = (ref, index) => {\r\n        refData[index] = ref\r\n    }\r\n\r\n    render() {\r\n\r\n        const { titleArray } = this.props\r\n        return (\r\n            <div className={styleClass}>\r\n                <div className={`${styleClass}-footer`}>\r\n                    {\r\n                        titleArray.map((item, index) => {\r\n                            return (\r\n                                <div className={`${styleClass}-footer-div`} ref={(ref) => this.onRef(ref, index)} key={index} onClick={() => item.onClick(item)} onMouseUp={() => this.onMouseUp(item, index)} style={{ color: item.color && item.color, fontSize: item.fontSize && item.fontSize, backgroundColor: item.backgroundColor && item.backgroundColor }}>{item.title}</div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React, { Component } from \"react\"\r\nimport Header from \"./components/header\"\r\nimport Footer from \"./components/footer\"\r\n\r\nimport \"./index.less\"\r\n\r\nconst styleClass = \"index-style\"\r\n\r\n\r\nclass Index extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        // 监听路径变化\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let arr = []\r\n        for(let i = 0; i< 100; i++) {\r\n            arr.push(i + \"adjsasd时间啊和读卡机是的看见阿士大夫空间啊上打开哈斯柯达\")   \r\n        }\r\n        return (\r\n            <div className={styleClass}>\r\n                <Header/>\r\n \r\n                <div style={{ width: \"100%\", backgroundColor: \"#00a4ff\" }}>\r\n                    <div>5555555555555555555555 </div>\r\n                    {\r\n                        arr.map((item, index) => {\r\n                            return(\r\n                                <div key={index}>{item}</div>\r\n                            )\r\n                        })\r\n                    }\r\n                    <div>aaaaaaaaaaaaaaa</div>\r\n                </div>\r\n                \r\n                <Footer/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Index from \"../src/projects/filmApp/index\"\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Index />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}